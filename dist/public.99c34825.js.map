{"mappings":"ACCA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,IAAM,EAAO,SAAS,aAAa,CAAC,cAC9B,EAAY,SAAS,aAAa,CAAC,SACnC,EAAe,SAAS,aAAa,CAAC,YACtC,EAAS,SAAS,aAAa,CAAC,WAChC,EAAc,SAAS,aAAa,CAAC,iBAiC3C,eAAe,IACb,GAAI,CACF,IAAM,EAAM,MAAM,MAAM,mBAClB,EAAW,MAAM,EAAI,IAAI,EAE/B,CAAA,EAAY,SAAS,CAAG,GACxB,EACG,IAAI,CAAC,CAAC,EAAG,IAAM,IAAI,KAAK,EAAE,SAAS,EAAI,IAAI,KAAK,EAAE,SAAS,GAC3D,OAAO,CAAC,AAAC,IACR,IAAM,EAAO,SAAS,aAAa,CAAC,KACpC,CAAA,EAAK,WAAW,CAAG,CAAA,EAAG,EAAI,IAAI,CAAC,EAAE,EAAE,EAAI,GAAG,CAAC,WAAI,EAAE,EAAI,OAAO,CAAA,CAAE,CAC9D,EAAY,WAAW,CAAC,EAC1B,EACJ,CAAE,MAAO,EAAK,CACZ,EAAY,SAAS,CAAG,mCAC1B,CACF,CA/CA,EAAK,gBAAgB,CAAC,SAAU,MAAO,IACrC,EAAE,cAAc,GAChB,IAAM,EAAO,EAAU,KAAK,CAAC,IAAI,GAC3B,EAAU,EAAa,KAAK,CAAC,IAAI,GAEvC,GAAI,CAAC,EAAS,CACZ,EAAO,WAAW,CAAG,2BACrB,MACF,CAEA,GAAI,CACF,IAAM,EAAM,MAAM,MAAM,sBAAuB,CAC7C,OAAQ,OACR,QAAS,CAAE,eAAgB,kBAAmB,EAC9C,KAAM,KAAK,SAAS,CAAC,CAAE,KAAA,EAAM,QAAA,CAAQ,EACvC,EAGA,CAAA,EAAO,WAAW,CADL,MAAM,EAAI,IAAI,GAI3B,EAAU,KAAK,CAAG,GAClB,EAAa,KAAK,CAAG,GAGrB,GACF,CAAE,MAAO,EAAK,CACZ,EAAO,WAAW,CAAG,yBACvB,CACF,GAoBA,GACF","sources":["<anon>","public/wishwell-frontend.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", ()=>{\n    const form = document.querySelector(\"#wish-form\");\n    const nameInput = document.querySelector(\"#name\");\n    const messageInput = document.querySelector(\"#message\");\n    const status = document.querySelector(\"#status\");\n    const messageList = document.querySelector(\"#message-list\");\n    form.addEventListener(\"submit\", async (e)=>{\n        e.preventDefault();\n        const name = nameInput.value.trim();\n        const message = messageInput.value.trim();\n        if (!message) {\n            status.textContent = \"Message cannot be empty.\";\n            return;\n        }\n        try {\n            const res = await fetch(\"/api/saveWebMessage\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    name,\n                    message\n                })\n            });\n            const text = await res.text();\n            status.textContent = text;\n            // Reset form\n            nameInput.value = \"\";\n            messageInput.value = \"\";\n            // Refresh messages\n            fetchMessages();\n        } catch (err) {\n            status.textContent = \"Failed to send message.\";\n        }\n    });\n    async function fetchMessages() {\n        try {\n            const res = await fetch(\"/api/getMessage\");\n            const messages = await res.json();\n            messageList.innerHTML = \"\";\n            messages.sort((a, b)=>new Date(b.timestamp) - new Date(a.timestamp)).forEach((msg)=>{\n                const item = document.createElement(\"li\");\n                item.textContent = `${msg.name} (${msg.via}) \\u{2013} ${msg.message}`;\n                messageList.appendChild(item);\n            });\n        } catch (err) {\n            messageList.innerHTML = \"<li>Failed to load messages.</li>\";\n        }\n    }\n    fetchMessages();\n});\n\n//# sourceMappingURL=public.99c34825.js.map\n","\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const form = document.querySelector(\"#wish-form\");\n  const nameInput = document.querySelector(\"#name\");\n  const messageInput = document.querySelector(\"#message\");\n  const status = document.querySelector(\"#status\");\n  const messageList = document.querySelector(\"#message-list\");\n\n  form.addEventListener(\"submit\", async (e) => {\n    e.preventDefault();\n    const name = nameInput.value.trim();\n    const message = messageInput.value.trim();\n\n    if (!message) {\n      status.textContent = \"Message cannot be empty.\";\n      return;\n    }\n\n    try {\n      const res = await fetch(\"/api/saveWebMessage\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name, message }),\n      });\n\n      const text = await res.text();\n      status.textContent = text;\n\n      // Reset form\n      nameInput.value = \"\";\n      messageInput.value = \"\";\n\n      // Refresh messages\n      fetchMessages();\n    } catch (err) {\n      status.textContent = \"Failed to send message.\";\n    }\n  });\n\n  async function fetchMessages() {\n    try {\n      const res = await fetch(\"/api/getMessage\");\n      const messages = await res.json();\n\n      messageList.innerHTML = \"\";\n      messages\n        .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n        .forEach((msg) => {\n          const item = document.createElement(\"li\");\n          item.textContent = `${msg.name} (${msg.via}) â€“ ${msg.message}`;\n          messageList.appendChild(item);\n        });\n    } catch (err) {\n      messageList.innerHTML = \"<li>Failed to load messages.</li>\";\n    }\n  }\n\n  fetchMessages();\n});\n"],"names":["document","addEventListener","form","querySelector","nameInput","messageInput","status","messageList","fetchMessages","res","fetch","messages","json","innerHTML","sort","a","b","Date","timestamp","forEach","msg","item","createElement","textContent","name","via","message","appendChild","err","e","preventDefault","value","trim","method","headers","body","JSON","stringify","text"],"version":3,"file":"public.99c34825.js.map"}